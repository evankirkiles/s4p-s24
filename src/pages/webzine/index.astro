---
import Design2 from "@/assets/img/Design2.jpg";
import RootLayout from "@/layouts/webzine/RootLayout.astro";
import { Image } from "astro:assets";
import { getCollection } from "astro:content";

const webzineEntries = await getCollection("webzine");
---

<RootLayout disableBlurAndInstructions>
  <title slot="head">P1: Webzine</title>
  <article class="Home">
    <div class="Home_contents">
      <a class="Home_back" href="/">&larr; Back Home</a>
      <Image src={Design2} alt="An interview of " />
      <h1>THE IMPORTANCE OF SPOKEN WEB</h1>
      <p>
        This situated webzine aims to explore the importance of oral tradition,
        a medium lost in the era of written word and digital media. For the
        majority of human history, speech and body language have been the
        singular means of communication. It was only with the invention of
        cuneiform about 5,000 years ago where textual information began to be
        able to be recorded and live outside of memories and conversations. The
        articles selected here are meant to explore the importance of spoken
        word across cultures, from applications in genealogy to storytelling.
      </p>
      <p>
        Uniquely, the webzine itself prioritizes spoken word over written text,
        running counter to the visual-first nature of digital technology. In an
        effort to bring attention to alternative, accessible modes of navigation
        on the web, the webzine's articles are designed to be navigated by
        screen reader <i>only</i>, and are optimized for screen readers and
        other assistive technologies. The article contents are blurred for
        sighted readers.
      </p>
      <h2>On Screenreaders</h2>
      <p>
        It is recommended to familiarize yourself with your platform's
        screenreader before entering the articles. On Mac devices, VoiceOver can
        be toggled on and off with <kbd>⌘+F5</kbd>. The main navigation can be
        activated with <kbd>CAPS+U</kbd> (yes, the caps lock button), and has several
        panes for different modes of navigating a page—recommended is to use the
        "Headings" pane.
      </p>
      <p>
        To read an article, it is generally enough across the web to open the
        "Headings" navigation pane, focus the `h1` element (navigating to it
        with arrow keys and pressing ENTER), and begin reading using <kbd
          >CAPS+A</kbd
        >. Now would be a great time to do this—see if you can read "The
        Importance of Spoken Web" in this page.
      </p>
      <p>Some additional controls to be aware of:</p>
      <ul>
        <li>
          <kbd>CAPS+SHIFT+&#123;←,→&#125;</kbd> to move within a level in the document
          tree
        </li>
        <li>
          <kbd>CAPS+SHIFT+&#123;↑,↓&#125;</kbd> to move up/down a level in the document
          tree
        </li>
        <li>
          <kbd>CAPS+SPACE</kbd> to interact with a button or link
        </li>
        <li>
          <kbd>CAPS+H</kbd> to read the current line
        </li>
        <li>
          <kbd>CAPS+L</kbd> to read the current paragraph
        </li>
        <li>
          <kbd>CAPS+R</kbd> to read the current word
        </li>
      </ul>
      <p>
        Our goal here is to increase awareness into alternative modes of
        navigation across the internet in an informative, engaging manner.
      </p>
      <h2>On "Reader Modes"</h2>
      <p>
        One caveat to this webzine is that, despite our enforced restrictions,
        all content is made available to sighted users through browser "reader
        modes"—simplified, pared-down, unstyled versions of webpages available
        when a website is sufficiently machine-readable and looks enough like an
        article.
      </p>
      <p>
        Rather than garble the HTML of the articles to break "reader mode", I
        have chosen to let this be an example into the benefits of semantic,
        accessible HTML. Not only are content semantics accessible, they are
        machine-readable and often lead to improved SEO and user experience in
        ways that are not immediately obvious.
      </p>
    </div>
    <ol class="Home_list">
      {
        webzineEntries.map((entry) => (
          <li>
            <a href={`/webzine/${entry.slug}`}>{entry.data.title}</a>
          </li>
        ))
      }
    </ol>
  </article>
</RootLayout>

<script></script>

<style lang="scss" is:global>
  .Home {
    display: grid;
    grid-template-columns: repeat(
      auto-fill,
      minmax(min(100vw, calc(0.75 * var(--max-inline-content) - 2px)), 1fr)
    );
    flex: 1;
    gap: 1px;
    // filter: blur(10px);
    transition: filter 0.1s ease-in-out;
    inline-size: 100%;
    max-inline-size: calc(2 * var(--max-inline-content));

    & > * {
      margin-inline: -1px;
      border-inline-start: 1px solid currentColor;
      border-inline-end: 1px solid currentColor;
      inline-size: calc(100% + 2px);
    }

    &_back {
      display: block;
      margin: calc(-1 * var(--page-padding));
      margin-block-end: 0;
      border-block-end: 1px solid currentColor;
      padding: calc(0.5 * var(--page-padding)) var(--page-padding);
    }

    &_contents {
      padding: var(--page-padding);
      & h1 {
        margin-block: 0.1em 0.1em;
        font-weight: 700;
        font-size: 4rem;
        line-height: 0.85;
        letter-spacing: -0.01em;
        text-transform: uppercase;
      }

      & h2 {
        margin-block-start: 1em;
        font-weight: 700;
      }

      & img {
        mix-blend-mode: lighten;
        margin-inline: calc(-1 * var(--page-padding));
        border-block-end: 1px solid currentColor;
        inline-size: calc(100% + 2 * var(--page-padding));
        max-inline-size: unset;
      }

      & p {
        margin-block: 0.5em;
      }
    }

    &_list {
      flex: 1;
      counter-reset: articles;
      margin-block: -1px;
      font-weight: 700;
      font-size: 3rem;
      line-height: 1;
      text-transform: uppercase;

      & li {
        &:first-child {
          border-block-start: 1px solid currentColor;
        }
      }

      & a {
        display: block;
        border-block-end: 1px solid currentColor;
        padding: calc(0.5 * var(--page-padding)) var(--page-padding);
        inline-size: 100%;

        &::before {
          counter-increment: articles;
          content: counter(articles) ". ";
        }

        &:hover {
          background-color: var(--color-hl);
          color: var(--color-bg);
        }
      }
    }
  }
</style>
